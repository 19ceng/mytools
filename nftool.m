% Solve a Pattern Recognition Problem with a Neural Network
% Script generated by NPRTOOL
% Created Sat Feb 02 17:07:58 EET 2013
%
% This script assumes these variables are defined:
%
%   X - input data.
%   y - target data.

inputs = [trn.data.bauck09.X tst.data.bauck09.X];
targets = [trn.data.y tst.data.y] == 2;

% Create a Pattern Recognition Network
hiddenLayerSize = 10;
net = patternnet(hiddenLayerSize);


% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;


% Train the Network
[net,tr] = train(net,inputs,targets);

% Test the Network
outputs = net(inputs);
errors = gsubtract(targets,outputs);
performance = perform(net,targets,outputs)

% View the Network
view(net)

% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, plotconfusion(targets,outputs)
%figure, ploterrhist(errors)

e = 1 + double([round(outputs)' targets']);
error_eval(e(:, 1), e(:, 2))
